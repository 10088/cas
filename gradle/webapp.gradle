apply plugin: "war"
apply plugin: "com.moowork.node"

project.ext["mainClassName"] = "org.apereo.cas.web.CasWebApplication"
apply from: rootProject.file("gradle/springboot.gradle")

description = "Apereo CAS Web Application"

node {
    version = "${nodeVersion}"
    nodeModulesDir = project(":webapp").projectDir
    download = true
}

if (!Boolean.getBoolean("skipNpmCache")) {
    npm_install.dependsOn(npm_cache_clean)
}

task npmLint(type: NpmTask) {
    dependsOn npm_install
    description "Lint the JavaScript files"
    group "UI"
    args = ['run', 'lint', '--silent']
}

task compileSass(type: NpmTask) {
    group 'UI'
    dependsOn npm_install
    description "Compile Sass"
    args = ['run', 'gulp', '--silent']
}

if (!rootProject.publishingRelease && !Boolean.getBoolean("skipNpmLint")) {
    processResources.dependsOn npmLint
}

if (!Boolean.getBoolean("skipSass")) {
    processResources.dependsOn compileSass
} else {
    println("Skipping Sass compilation...")
}

if (!Boolean.getBoolean("skipNodeModulesCleanUp")) {
    clean.delete << new File(project(":webapp").projectDir, "node_modules")
    clean.delete << fileTree(dir: project(":webapp").projectDir.getPath() + '/resources/static/js', include: '*-bundle.js')
} else {
    println("Skipping node_modules cleanup...")
}

sourceSets {
    main {
        resources {
            srcDirs "${project.buildDir}/generated-src/main/resources", "${project.projectDir}/../resources"
        }
    }
}

javadoc {
    enabled false
}

dependencies {
    implementation project(":core:cas-server-core")
    implementation project(":core:cas-server-core-monitor")
    implementation project(":core:cas-server-core-authentication")
    implementation project(":core:cas-server-core-services")
    implementation project(":core:cas-server-core-logout")
    implementation project(":core:cas-server-core-audit")
    implementation project(":core:cas-server-core-logging")
    implementation project(":core:cas-server-core-tickets")
    implementation project(":core:cas-server-core-web")
    implementation project(":core:cas-server-core-validation")
    implementation project(":core:cas-server-core-util")
    implementation project(":core:cas-server-core-cookie")
    implementation project(":core:cas-server-core-events")
    implementation project(":core:cas-server-core-events-configuration")
    implementation project(":core:cas-server-core-configuration")
    implementation project(":core:cas-server-core-configuration-metadata-repository")

    implementation project(":support:cas-server-support-throttle")
    implementation project(":support:cas-server-support-person-directory")
    implementation project(":support:cas-server-support-configuration")
    implementation project(":support:cas-server-support-geolocation")
    implementation project(":support:cas-server-support-actions")
    implementation project(":support:cas-server-support-reports")
    implementation project(":support:cas-server-support-themes")
    implementation project(":support:cas-server-support-validation")
    implementation project(":support:cas-server-support-pm-webflow")

    implementation project(":webapp:cas-server-webapp-config")
    implementation project(":webapp:cas-server-webapp-init")

    implementation libraries.pac4j
    implementation libraries.thymeleaf
    implementation libraries.groovy
    implementation libraries.cassecurityfilter
    implementation libraries.metrics
    implementation libraries.bouncycastle
    implementation libraries.springcloudconfigclient

    runtime libraries.webjars
}
