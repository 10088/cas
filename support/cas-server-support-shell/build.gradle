project.ext["mainClassName"] = "org.apereo.cas.CasCommandLineShellApplication"
apply from: rootProject.file("gradle/springboot.gradle")

description = "Apereo CAS Shell Support via Spring Shell"

dependencies {
    /**
     * Marking all dependencies as compile so they can be included in the final
     * executable jar by the build packaging process.
     */
    compile project(":api:cas-server-core-api-services")

    compile project(":core:cas-server-core-configuration")
    compile project(":core:cas-server-core-configuration-api")
    compile project(":core:cas-server-core-util")
    compile project(":core:cas-server-core-services-api")
    compile project(":core:cas-server-core-configuration-metadata-repository")

    compile project(":support:cas-server-support-oauth-services")
    compile project(":support:cas-server-support-oidc-services")
    compile project(":support:cas-server-support-saml-idp-core")
    compile project(":support:cas-server-support-ws-idp-api")
    compile project(":support:cas-server-support-saml-idp-core")
    
    compile libraries.springbootconfigmetadata
    compile libraries.metrics
    compile libraries.pac4j
    compile libraries.jasypt
    compile libraries.bouncycastle
    compile libraries.opensaml
}


task listUndocumentedProperties(type: JavaExec) {
    standardOutput = new ByteArrayOutputStream()
    main = "org.apereo.cas.CasCommandLineShellApplication"
    classpath = sourceSets.main.runtimeClasspath
    args "-skb", "-pundoc"
    doLast {
        def theOutput = standardOutput.toString()
        if (theOutput != null && theOutput.length() > 0 && theOutput.contains("Undocumented Property:")) {
            throw new GradleException("Undocumented properties found:\n" + theOutput)
        }
    }
}

jar.finalizedBy(listUndocumentedProperties)